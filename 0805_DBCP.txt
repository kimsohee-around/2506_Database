[[ DBCP란?]]
DBCP (Database Connection Pool)는 애플리케이션이 데이터베이스에 접근할 때마다 새로 연결을 생성하는 대신,
 미리 생성된 연결 객체(Connection)를 풀(pool)에 저장해두고 재사용하는 방식입니다.

✅ 주요 목적
-성능 향상: 매번 연결을 생성/종료하는 비용을 줄임
-자원 절약: 연결 수를 제한해 서버 과부하 방지
-응답 속도 개선: 즉시 사용 가능한 연결 제공

✅ 동작 방식
WAS(Web Application Server) 시작 시 일정 수의 DB 연결을 생성해 Pool에 저장
요청이 오면 Pool에서 연결을 꺼내 사용
사용 후 연결을 종료하지 않고 Pool에 반환
필요 시 Pool에서 새로운 연결을 생성하거나 제거

✅ DBCP의 종류 및 특징

 - Apache Commons DBCP	: 
	가장 오래된 DBCP 라이브러리 중 하나. 
	안정적이지만 성능은 다소 낮음. spring에서 사용 가능. 설정이 비교적 복잡함
 - Tomcat JDBC Pool	: 
	Tomcat에서 제공하는 커넥션 풀. 
	Commons DBCP보다 성능이 좋고 설정이 간단함.Tomcat 기반 프로젝트에 적합
 - HikariCP	: 
	가장 빠르고 가벼운 커넥션 풀. Spring Boot 2.0 이상에서 기본으로 채택됨.	
	고성능 요구되는 서비스에 적합
   	Spring Boot 2.0 이상에서는 기본적으로 HikariCP를 사용하며, 
	spring.datasource.hikari.* 설정을 통해 커스터마이징 가능합니다

✅ 주요 설정 옵션 (HikariCP 기준)

maximumPoolSize		최대 커넥션 수 (기본값: 10)
minimumIdle		최소 유휴 커넥션 수
maxLifetime		커넥션의 최대 수명 (기본값: 30분)
connectionTimeout	커넥션을 얻기 위한 최대 대기 시간
idleTimeout		유휴 커넥션이 제거되기까지의 시간

✅ 결론
DBCP는 DB 연결을 미리 만들어 풀에 저장하고 재사용함으로써 성능을 향상시키는 기술
적절한 설정을 통해 트래픽 폭주 시에도 안정적인 서비스 제공 가능
HikariCP 를 사용함.
